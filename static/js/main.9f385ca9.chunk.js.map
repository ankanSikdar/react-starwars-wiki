{"version":3,"sources":["components/Card.js","components/CardList.js","components/NavBar.js","components/Footer.js","components/SearchBox.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","character","link","name","className","data-link","href","style","textDecoration","gender","birth_year","height","mass","CardList","characterList","searchValue","length","charactersArray","forEach","toLowerCase","includes","push","key","url","NavBar","alt","src","Footer","id","title","data-icon","viewBox","fill","d","x","y","points","gradientUnits","x1","y1","x2","y2","offset","SearchBox","onSearch","type","placeholder","onChange","App","event","setState","searchField","target","value","state","charactersList","fetch_url","a","fetch","then","responses","json","response","results","characters","getData","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f385ca9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Card = ({character}) => {\r\n    let link = \"https://google.com/search?q=\" + character.name\r\n    return (\r\n        <div className=\"tc mw5 mv3 ba b--black-10 pa4-ns bg-white dib br3 pa3 ma2 dim bw2 shadow-5\" data-link={link}>\r\n            <a href={link} style={{textDecoration:\"None\"}}>\r\n                <p className=\"f3 mb2 black\"><strong>Name:</strong> {character.name}</p>\r\n                <p className=\"f5 fw4 gray mt0\"><strong>Sex:</strong> {character.gender}</p>\r\n                <p className=\"f5 fw4 gray mt0\"><strong>Birth Year:</strong> {character.birth_year}</p>\r\n                <p className=\"f5 fw4 gray mt0\"><strong>Height/Mass:</strong> {character.height}/{character.mass}</p>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({characterList, searchValue}) => {\r\n    \r\n    if (characterList.length > 0) {\r\n        let charactersArray = []\r\n        characterList.forEach(character => {\r\n            if(character.name.toLowerCase().includes(searchValue)) {\r\n                charactersArray.push(<Card key={character.url} character={character}/>)\r\n            }\r\n        })\r\n        return (\r\n            <div className=\"tc cf w-100 center avenir\">\r\n                {charactersArray}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"tc\"><h1>LOADING...</h1></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default CardList","import React from 'react'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <header className=\"bg-white black-80 tc pv3 avenir w-100\">\r\n            <a href=\"https://image.flaticon.com/icons/svg/2034/2034751.svg\">\r\n                <img className=\"pa3 w3 h3\" alt=\"LightSaber ;)\" src=\"https://image.flaticon.com/icons/svg/2034/2034751.svg\"></img>\r\n            </a>\r\n            <h1 className=\"mt2 mb0 ttu baskerville i fw1 f1\">Star Wars Wiki</h1>\r\n            <h2 className=\"mt2 mb0 f6 fw4 tracked\">Details of Characters</h2>\r\n            <nav className=\"bt bb tc center mt4\">\r\n                <a className=\"f6 f5-l link bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\" href=\"/\">Home</a>\r\n                <a className=\"f6 f5-l link bg-animate black-80 hover-bg-light-yellow dib pa3 ph4-l\" href=\"#footer\">Contact</a>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer id=\"footer\" className=\"tc black-70 bt b--black-10 pv4 center\">\r\n            <div className=\"mb4-l cf\">\r\n                <h1 className=\"w-100 f6 fw6 ttu tracked\">Made With Passion</h1>\r\n                <article className=\"w-100 dib-ns\">\r\n                <h4 className=\"f5 f4-l fw6\">By Ankan Sikdar</h4>\r\n                <span className=\"f7 f6-l db black-70\">Kolkata, West Bengal</span>\r\n                <span className=\"f7 f6-l black-70\">India</span>\r\n                </article>\r\n            </div>\r\n            <div className=\"dt dt--fixed w-100\" >\r\n                <div className=\"db dtc-ns black-70 v-mid\">\r\n                <a href=\"https://www.facebook.com/ankanSikdar\" className=\"link dim dib mr3 black-70\" title=\"Impossible Labs on Facebook\">\r\n                    <svg className=\"db w2 h2\" data-icon=\"facebook\" viewBox=\"0 0 32 32\" fill=\"currentColor\">\r\n                    <title >facebook icon</title>\r\n                    <path d=\"M8 12 L13 12 L13 8 C13 2 17 1 24 2 L24 7 C20 7 19 7 19 10 L19 12 L24 12 L23 18 L19 18 L19 30 L13 30 L13 18 L8 18 z\"\r\n                    ></path>\r\n                    </svg>\r\n                </a>\r\n                <a href=\"https://twitter.com/ankan_sikdar\" className=\"link dim dib mr3 black-70\">\r\n                    <svg className=\"db w2 h2\" data-icon=\"twitter\" viewBox=\"0 0 32 32\"\r\n                    fill=\"currentColor\" >\r\n                    <title >twitter icon</title>\r\n                    <path d=\"M2 4 C6 8 10 12 15 11 A6 6 0 0 1 22 4 A6 6 0 0 1 26 6 A8 8 0 0 0 31 4 A8 8 0 0 1 28 8 A8 8 0 0 0 32 7 A8 8 0 0 1 28 11 A18 18 0 0 1 10 30 A18 18 0 0 1 0 27 A12 12 0 0 0 8 24 A8 8 0 0 1 3 20 A8 8 0 0 0 6 19.5 A8 8 0 0 1 0 12 A8 8 0 0 0 3 13 A8 8 0 0 1 2 4\"\r\n                    ></path>\r\n                    </svg>\r\n                </a>\r\n                <a href=\"https://medium.com/@ankansikdar\" className=\"link dim dib mr3 black-70\" title=\"Impossible Labs on Medium\">\r\n                    <svg className=\"db w2 h2\" x=\"0px\" y=\"0px\" viewBox=\"0 0 290 248.6\"\r\n                    fill=\"currentColor\" >\r\n                    <g >\r\n                        <path fill=\"currentColor\" className=\"st0\" d=\"M287.8,46.3L196,0.3c-0.4-0.2-0.9-0.3-1.3-0.3c0,0-0.1,0-0.1,0c-1.1,0-2.2,0.6-2.8,1.5l-56.6,92l63.2,102.7 l90.4-146.9C289.4,48.3,289,46.8,287.8,46.3z\"\r\n                        ></path>\r\n                        <polygon fill=\"currentColor\" points=\"105.2,61.2 105.2,160.3 193.3,204.4 \t\"\r\n                        ></polygon>\r\n                        <path fill=\"currentColor\" d=\"M201,208.2l80.9,40.5c4.4,2.2,8,0,8-5v-180L201,208.2z\"\r\n                        ></path>\r\n                        <path fill=\"currentColor\" d=\"M95.5,46.7L10.7,4.3L5.4,1.7C4.6,1.3,3.8,1.1,3.2,1.1c-0.9,0-1.7,0.4-2.3,1.1C0.3,2.8,0,3.8,0,5v193.4 c0,3.3,2.4,7.2,5.4,8.7l83.3,41.6c1.2,0.6,2.3,0.9,3.3,0.9c2.8,0,4.8-2.2,4.8-5.8V48.7C96.7,47.8,96.2,47.1,95.5,46.7z\"\r\n                        ></path>\r\n                    </g>\r\n                    </svg>\r\n                </a>\r\n                <a href=\"https://www.linkedin.com/in/ankansikdar/\" className=\"link dim dib black-70\">\r\n                    <svg className=\"db w2 h2\" x=\"0px\" y=\"0px\" viewBox=\"0 0 48 48\" >\r\n                    <linearGradient gradientUnits=\"userSpaceOnUse\" x1=\"23.9995\"\r\n                        y1=\"0\" x2=\"23.9995\" y2=\"48.0005\" >\r\n                        <stop offset=\"0\" ></stop>\r\n                        <stop offset=\"1\" ></stop>\r\n                    </linearGradient>\r\n                    <path fill=\"currentColor\" d=\"M48,42c0,3.313-2.687,6-6,6H6c-3.313,0-6-2.687-6-6V6 c0-3.313,2.687-6,6-6h36c3.313,0,6,2.687,6,6V42z\"\r\n                    ></path>\r\n                    <g >\r\n                        <g >\r\n                        <path fill=\"#FFFFFF\" d=\"M15.731,11.633c-1.608,0-2.658,1.083-2.625,2.527c-0.033,1.378,1.018,2.494,2.593,2.494 c1.641,0,2.691-1.116,2.691-2.494C18.357,12.716,17.339,11.633,15.731,11.633z M13.237,35.557h4.988V18.508h-4.988V35.557z M31.712,18.748c-1.595,0-3.222-0.329-4.956,2.36h-0.099l-0.087-2.599h-4.417c0.065,1.411,0.074,3.518,0.074,5.52v11.529h4.988 v-9.854c0-0.46,0.065-0.919,0.196-1.248c0.328-0.919,1.149-1.871,2.527-1.871c1.805,0,2.527,1.411,2.527,3.479v9.494h4.988V25.439 C37.455,20.713,34.993,18.748,31.712,18.748z\"\r\n                        ></path>\r\n                        </g>\r\n                    </g>\r\n                    </svg>\r\n                </a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst SearchBox = ({onSearch}) => {\r\n    return (\r\n        <div className=\"tc pa2\">\r\n            <input className=\"pa3 ba\" name=\"searchField\" type=\"search\" placeholder=\"Search\" onChange={onSearch}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React, { Component } from 'react';\r\nimport '../containers/App';\r\nimport CardList from '../components/CardList'\r\nimport NavBar from '../components/NavBar'\r\nimport Footer from '../components/Footer'\r\nimport SearchBox from '../components/SearchBox'\r\n\r\nconst url = \"https://swapi.co/api/people/\"\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      charactersList: {},\r\n      searchField: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const getData = async(fetch_url) => {\r\n      let response = await fetch(fetch_url)\r\n                            .then(responses => responses.json())\r\n      let characters = await response.results\r\n      this.setState({charactersList: characters})\r\n    }\r\n    getData(url)\r\n  }\r\n\r\n  onSearch = (event) => {\r\n    this.setState({\r\n      searchField: event.target.value.toLowerCase()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <NavBar/>\r\n          <SearchBox onSearch={this.onSearch}/>\r\n          <CardList characterList={this.state.charactersList} searchValue={this.state.searchField}/>\r\n          <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}